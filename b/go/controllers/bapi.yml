consumes:
- application/json
definitions:
  bclassAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Floatfield:
        format: double
        type: number
      Namefield:
        type: string
    title: BclassAPI is the input in POST API
    type: object
    x-go-name: BclassAPI
    x-go-package: github.com/thomaspeugeot/sandbox01/b/go/orm
  bclassDB:
    description: 'It incorporates all fields : from the model, from the generated
      field for the API and the GORM ID'
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        format: date-time
        type: string
      Floatfield:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Namefield:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: BclassDB describes a bclass in the database
    type: object
    x-go-name: BclassDB
    x-go-package: github.com/thomaspeugeot/sandbox01/b/go/orm
host: localhost:8080
info:
  description: b exposes types of a package.
  title: |-
    generated by genGoDocs.go
    Package b b backend API
  version: "0.1"
paths:
  /bclasss:
    get:
      description: Get all bclasss
      operationId: getBclasss
      responses:
        "200":
          $ref: '#/responses/bclassDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - bclasss
    post:
      consumes:
      - application/json
      description: Creates a bclass
      operationId: postBclass
      parameters:
      - description: The Bclass to submit or modify
        in: body
        name: Bclass
        schema:
          $ref: '#/definitions/bclassAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/bclassDBResponse'
      tags:
      - bclasss
  /bclasss/{ID}:
    delete:
      description: Delete a bclass
      operationId: deleteBclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - bclasss
    get:
      operationId: getBclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/bclassDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a bclass.
      tags:
      - bclasss
    patch:
      description: Update a bclass
      operationId: updateBclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Bclass to submit or modify
        in: body
        name: Bclass
        schema:
          $ref: '#/definitions/bclassAPI'
      responses:
        "200":
          $ref: '#/responses/bclassDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - bclasss
produces:
- application/json
responses:
  bclassDBResponse:
    description: BclassDBResponse provides response
    headers:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        format: date-time
        type: string
      Floatfield:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Namefield:
        type: string
      UpdatedAt:
        format: date-time
        type: string
  bclassDBsResponse:
    description: BclassDBs arrays bclassDBs
    schema:
      items:
        $ref: '#/definitions/bclassDB'
      type: array
  genericError:
    description: |-
      A GenericError is the default error message that is generated.
      For certain status codes there are more appropriate error structures.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        message:
          type: string
          x-go-name: Message
      type: object
  validationError:
    description: |-
      A ValidationError is an that is generated for validation failures.
      It has the same fields as a generic error but adds a Field property.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        field:
          type: string
          x-go-name: Field
        message:
          type: string
          x-go-name: Message
      type: object
schemes:
- http
securityDefinitions:
  basic:
    type: basic
swagger: "2.0"
