consumes:
- application/json
definitions:
  aclassAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Floatfield:
        format: double
        type: number
      Namefield:
        type: string
    title: AclassAPI is the input in POST API
    type: object
    x-go-name: AclassAPI
    x-go-package: github.com/thomaspeugeot/sandbox01/a/go/orm
  aclassDB:
    description: 'It incorporates all fields : from the model, from the generated
      field for the API and the GORM ID'
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        format: date-time
        type: string
      Floatfield:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Namefield:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: AclassDB describes a aclass in the database
    type: object
    x-go-name: AclassDB
    x-go-package: github.com/thomaspeugeot/sandbox01/a/go/orm
host: localhost:8080
info:
  description: a exposes types of a package.
  title: |-
    generated by genGoDocs.go
    Package a a backend API
  version: "0.1"
paths:
  /aclasss:
    get:
      description: Get all aclasss
      operationId: getAclasss
      responses:
        "200":
          $ref: '#/responses/aclassDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - aclasss
    post:
      consumes:
      - application/json
      description: Creates a aclass
      operationId: postAclass
      parameters:
      - description: The Aclass to submit or modify
        in: body
        name: Aclass
        schema:
          $ref: '#/definitions/aclassAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/aclassDBResponse'
      tags:
      - aclasss
  /aclasss/{ID}:
    delete:
      description: Delete a aclass
      operationId: deleteAclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - aclasss
    get:
      operationId: getAclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/aclassDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a aclass.
      tags:
      - aclasss
    patch:
      description: Update a aclass
      operationId: updateAclass
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Aclass to submit or modify
        in: body
        name: Aclass
        schema:
          $ref: '#/definitions/aclassAPI'
      responses:
        "200":
          $ref: '#/responses/aclassDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - aclasss
produces:
- application/json
responses:
  aclassDBResponse:
    description: AclassDBResponse provides response
    headers:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        format: date-time
        type: string
      Floatfield:
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Namefield:
        type: string
      UpdatedAt:
        format: date-time
        type: string
  aclassDBsResponse:
    description: AclassDBs arrays aclassDBs
    schema:
      items:
        $ref: '#/definitions/aclassDB'
      type: array
  genericError:
    description: |-
      A GenericError is the default error message that is generated.
      For certain status codes there are more appropriate error structures.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        message:
          type: string
          x-go-name: Message
      type: object
  validationError:
    description: |-
      A ValidationError is an that is generated for validation failures.
      It has the same fields as a generic error but adds a Field property.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        field:
          type: string
          x-go-name: Field
        message:
          type: string
          x-go-name: Message
      type: object
schemes:
- http
securityDefinitions:
  basic:
    type: basic
swagger: "2.0"
