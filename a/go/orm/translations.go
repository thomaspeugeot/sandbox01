// generated by genORMTranslation.go
package orm

import (
	"errors"

	"github.com/jinzhu/gorm"
)

// TranslationImpact distinguish CREATE or UPDATE mode when translating
type TranslationImpact int

const (
	CreateMode TranslationImpact = iota // target objects are not initialized yet
	UpdateMode                          // target objects already exists and are only updated
)

// AllORMStoreStruct supports callback functions
type AllORMStoreStruct struct {
	db *gorm.DB
}

var AllORMStore AllORMStoreStruct

func (allORMStore *AllORMStoreStruct) SetDB(db *gorm.DB) {
	allORMStore.db = db
}

// AllORMToModels init reset all stores of models and orm instances
func AllModelsToORM(db *gorm.DB) (Error error) {


	map_AclassDBID_AclassDB = nil
	map_AclassPtr_AclassDBID = nil
	map_AclassDBID_AclassPtr = nil
	if err := ModelToORMAclassTranslate(
		CreateMode,
		db); err != nil {
		return err
	}


	// and now update of the pointer fields
	// now the pointers
	if err := ModelToORMAclassTranslate(
		UpdateMode,
		db); err != nil {
		return err
	}


	return nil
}

// AllORMToModels update all stores of models to orm instances
func AllModelsUpdateToORM(db *gorm.DB) (Error error) {


	// and now update of the pointer fields
	// now the pointers
	if err := ModelToORMAclassTranslate(
		UpdateMode,
		db); err != nil {
		return err
	}


	return nil
}


// AllORMToModels init reset all stores of models and orm instances
func AllORMToModels(db *gorm.DB) (Error error) {

	// Init all instances of in the model store

	map_AclassDBID_AclassDB = nil
	map_AclassPtr_AclassDBID = nil
	map_AclassDBID_AclassPtr = nil
	if err := ORMToModelAclassTranslate(
		CreateMode, 
		db); err != nil {
		err := errors.New("AllORMToModels, CreateMode Translation of Aclass failed")
		return err
	}



	if err := ORMToModelAclassTranslate(
			UpdateMode, 
			db); err != nil {
		err := errors.New("AllORMToModels, UpdateMode Translation of Aclass failed")
		return err
	}

	return nil
}

// AllORMUpdateToModels init reset all stores of models and orm instances
func AllORMUpdateToModels(db *gorm.DB) (Error error) {

	// Init all instances of in the model store

	if err := ORMToModelAclassTranslate(
			UpdateMode, 
			db); err != nil {
		err := errors.New("AllORMToModels, UpdateMode Translation of Aclass failed")
		return err
	}

	return nil
}
